@charset 'utf-8';
@import 'reset.scss';
@import 'mixin.scss';

$mainFont : 'arial';
$titleFontSize : 20px;
$contentFontSize : 14px;

body{
  background: #eee;
  .wrap{
    width: 100%;

    @include clear();

    &:hover{
      .item{
        opacity: 1;
        transform: translateY(0);
      }
    }
    .item{
      float: left;
      width: 300px;
      height: 200px;
      border-radius: 10px;
      background-color: #fff;
      box-shadow: 5px 5px 20px #ddd;
      margin: 40px;
      padding: 40px 30px;
      opacity: 0;
      transform: translateY(100px);
      transition: 0.5s;

      @for $i from 1 through 10 { // to는 <, through는 <=
        &:nth-of-type(#{$i}){ // $표시 필수
          transition-delay: 0.1s * $i;
        }
      }
      h2{
        font-weight: bold;
        font-size: $titleFontSize;
        font-family: $mainFont;
        color: #222;
        margin-bottom: 20px;
      }
      p{
        font: { //속성 네스팅
          size: $contentFontSize;
          faminly: $mainFont;
        }
        color: #999;
        margin-bottom: 20px;
      }
      a{
        @include button;
      }
      /*
        버튼 재활용 하는 방법 
        1. @mixin 사용
        2. 최상단에 클래스 지정한 후 버튼마다 해당 클래스 지정
          각 버튼 세부사항은 각 코드에서 덮어쓰기
      */
    }
  }
}

section{
  width: 500px + 500px;
  margin: 10px * 2;
  padding: calc(10px / 2);  // css 에서 슬래시를 사용하므로 오류 방지를 위해 나눗셈은 괄호로 묶기
  
  /*
    floor(n) : 내림
    ceil(n) : 올림
    round(n) : 반올림
  */
}

/*

<nesting의 종류>

1. 규칙 네스팅

2. 속성 네스팅

*/